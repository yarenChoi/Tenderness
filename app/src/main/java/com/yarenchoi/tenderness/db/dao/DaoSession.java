package com.yarenchoi.tenderness.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.yarenchoi.tenderness.db.entity.Image;
import com.yarenchoi.tenderness.db.entity.Memory;
import com.yarenchoi.tenderness.db.entity.Password;
import com.yarenchoi.tenderness.db.entity.Voice;

import com.yarenchoi.tenderness.db.dao.ImageDao;
import com.yarenchoi.tenderness.db.dao.MemoryDao;
import com.yarenchoi.tenderness.db.dao.PasswordDao;
import com.yarenchoi.tenderness.db.dao.VoiceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig imageDaoConfig;
    private final DaoConfig memoryDaoConfig;
    private final DaoConfig passwordDaoConfig;
    private final DaoConfig voiceDaoConfig;

    private final ImageDao imageDao;
    private final MemoryDao memoryDao;
    private final PasswordDao passwordDao;
    private final VoiceDao voiceDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        memoryDaoConfig = daoConfigMap.get(MemoryDao.class).clone();
        memoryDaoConfig.initIdentityScope(type);

        passwordDaoConfig = daoConfigMap.get(PasswordDao.class).clone();
        passwordDaoConfig.initIdentityScope(type);

        voiceDaoConfig = daoConfigMap.get(VoiceDao.class).clone();
        voiceDaoConfig.initIdentityScope(type);

        imageDao = new ImageDao(imageDaoConfig, this);
        memoryDao = new MemoryDao(memoryDaoConfig, this);
        passwordDao = new PasswordDao(passwordDaoConfig, this);
        voiceDao = new VoiceDao(voiceDaoConfig, this);

        registerDao(Image.class, imageDao);
        registerDao(Memory.class, memoryDao);
        registerDao(Password.class, passwordDao);
        registerDao(Voice.class, voiceDao);
    }
    
    public void clear() {
        imageDaoConfig.clearIdentityScope();
        memoryDaoConfig.clearIdentityScope();
        passwordDaoConfig.clearIdentityScope();
        voiceDaoConfig.clearIdentityScope();
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

    public MemoryDao getMemoryDao() {
        return memoryDao;
    }

    public PasswordDao getPasswordDao() {
        return passwordDao;
    }

    public VoiceDao getVoiceDao() {
        return voiceDao;
    }

}
